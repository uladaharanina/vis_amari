---
import fs from 'node:fs/promises';

const folderPath = `./public/preview`;

// Read the directory and filter out only image files
const files = await fs.readdir(folderPath);
const images = files.filter(file =>
  /\.(jpg|jpeg|png|gif|webp)$/i.test(file) // Ensure only image files are included
);

---

<ul id="carouselTargetList">
  {
    images.map((img, index) => {
      return (
        <li class="list_holder">
            <a>
            <img src={`/preview/${img}`} alt={img} class={img.class} loading="eager"/>
          </a>
        </li>
      );
    })
  }
</ul>

  <style>
      /**DESKTOP */
      @media screen and (min-width:1400px) {
        #carouselTargetList {
        display: flex;
        overflow-x: hidden;
        gap: 20px;
        width:95%;
        margin: auto;
        margin-top: 19em;
        padding: 20px 0;
      }

      .list_holder {
          list-style-type: none;
      }

      .carousel-slide {
        flex: 0 0 auto;
        width: 300px;  /* Adjust to the size you want */
        height: auto;
      }

      .carousel-slide img {
        width: 200px;
        height: auto;
        object-fit: cover;
      }
      }

            /**LAPTOP */
      @media screen and (min-width:1000px) and (max-width:1399px) {
        #carouselTargetList {
        display: flex;
        overflow-x: hidden;
        gap: 20px;
        width:95%;
        margin: auto;
        margin-top: 10em;
        padding: 20px 0;
      }

      .list_holder {
          list-style-type: none;
      }



      .carousel-slide {
        flex: 0 0 auto;
        width: 300px;  /* Adjust to the size you want */
        height: auto;
      }

      .list_holder img {
        width: 250px;
        height: 360px;
        object-fit: cover;
      }
      }


 /**TABLET */
 @media screen and (min-width:401px) and (max-width:999px){
  #carouselTargetList {
        display: flex;
        overflow-x: hidden;
        gap: 20px;
        width:95%;
        margin: auto;
        margin-top: 9em;
        margin-bottom: 4em;
        padding: 20px 0;
      }

      .list_holder {
          list-style-type: none;
      }



      .carousel-slide {
        flex: 0 0 auto;
        width: 300px;  /* Adjust to the size you want */
        height: auto;
      }

      .list_holder img {
        width: 200px;
        height: auto;
        object-fit: cover;
      }
    }

 /**MOBILE */
 @media screen and (max-width:400px) {
  #carouselTargetList {
        display: flex;
        width:100%;
        margin: auto;
        margin-top: 5em;
        margin-bottom: 3em;
        padding: 20px 0;
        -webkit-transition-timing-function: linear !important;
      transition-timing-function: linear !important;
      }

      

      .list_holder {
          list-style-type: none;
          margin: 0 5px;
      }

      .list_holder {
        flex: 0 0 auto;
        width: 100%;  /* Adjust to the size you want */
        height: auto;
      }

      .list_holder img {
        width: 100%;
        height: auto;
        margin: 0;
        object-fit: cover;
      }
    }

  </style>

<script>
window.addEventListener('load', () => {
  const carouselWrapper = document.querySelector('#carouselTargetList');
  const images = carouselWrapper.querySelectorAll('img');
  const itemWidth = images[0].offsetWidth + 10;  // Width of each carousel item + margin
  let speed = 1;
  let scrollPosition = 0;
  let delay = 3000;  // Delay between scrolls in milliseconds (3 seconds)
  let isReachedTheEnd = false;

  // Function to move the carousel smoothly
  function moveCarousel() {
    // Move right until we reach the end of the carousel
    if (scrollPosition < carouselWrapper.scrollWidth) {
      scrollPosition += itemWidth * speed;
    }

    // If we reach the end, reset to the start
    if (scrollPosition >= carouselWrapper.scrollWidth) {
      isReachedTheEnd = true;
      scrollPosition -= itemWidth * speed;
    }

    // Apply the smooth scrolling effect by using transform
    carouselWrapper.style.transition = 'transform 1.2s ease-in-out';  // Smooth transition
    carouselWrapper.style.transform = `translateX(-${scrollPosition}px)`;  // Move carousel

    // Continue moving the carousel
    setTimeout(moveCarousel, delay);
  }

  // Function for desktop carousel (smooth scroll and reset on reach end)
  function moveCarouselDesktop() {
    setInterval(() => {
      // Check if we have reached the end of the carousel
      if (scrollPosition >= carouselWrapper.scrollWidth - carouselWrapper.clientWidth || isReachedTheEnd) {
        isReachedTheEnd = true;
        scrollPosition -= itemWidth;
        if (scrollPosition < 200) {
          scrollPosition = 0;
          isReachedTheEnd = false;
        }
      } else {
        // Scroll to the right
        scrollPosition += itemWidth;
      }

      // Apply smooth scroll behavior
      carouselWrapper.scrollTo({
        left: scrollPosition,
        behavior: 'smooth',
      });
    }, delay);
  }

  // Mobile behavior (small screens)
  if (screen.width < 400) {
    console.log("Mobile carousel");
    setTimeout(moveCarousel, 2500);  // Start the mobile carousel with a delay
  }
  // Desktop behavior (large screens)
  else {
    console.log("Desktop carousel");
    moveCarouselDesktop();  // Start the desktop carousel immediately
  }
});

</script>
  